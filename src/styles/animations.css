@layer animations {
  /* Animations layer - Micro-interactions and animations */

  /* Enhanced Card Interactions */
  .card-interactive-enhanced {
    @apply transition-all duration-300 ease-out;
    will-change: transform, box-shadow;
  }

  .card-interactive-enhanced:hover {
    @apply -translate-y-0.5 shadow-lg;
  }

  .card-interactive-enhanced:active {
    @apply translate-y-0 shadow-md;
  }

  /* Selection Animations */
  .card-selection-animated.card-selected {
    animation: selection-pulse 2s ease-in-out infinite;
  }

  /* List Item Micro-Interactions */
  .card-list-item-animated {
    @apply transition-all duration-300 ease-out;
    will-change: transform, background-color;
  }

  .card-list-item-animated:hover {
    @apply translate-x-1;
  }

  .card-list-item-animated:active {
    @apply scale-98;
  }

  /* Button Press Feedback */
  .btn-animated {
    @apply transition-all duration-200 ease-out;
    will-change: transform, box-shadow;
  }

  .btn-animated:hover:not(:disabled) {
    @apply -translate-y-0.5 shadow-md;
  }

  .btn-animated:active:not(:disabled) {
    @apply translate-y-0 shadow-sm scale-95;
  }

  /* Status Badge Animations */
  .status-badge-animated {
    @apply transition-all duration-300 ease-out;
  }

  .status-badge-animated.status-blue {
    animation: pulse-blue 2s ease-in-out infinite;
  }

  .status-badge-animated.status-red {
    animation: bounce-error 0.6s ease-out;
  }

  /* List Item Stagger Animations */
  .list-item-stagger {
    animation: list-item-enter 400ms ease-out forwards;
    animation-delay: calc(var(--stagger-index, 0) * 80ms);
    opacity: 0; /* Start hidden until animation begins */
    will-change: transform, opacity;
  }

  /* Safety net: Ensure selected items are always visible */
  .card-selected {
    opacity: 1 !important;
  }

  /* Enter/Exit Transition Classes */
  .enter-animation {
    animation: fadeInUp 300ms ease-out forwards;
    will-change: transform, opacity;
  }

  .enter-animation-scale {
    animation: fadeInScale 300ms ease-out forwards;
    will-change: transform, opacity;
  }

  .enter-animation-slide {
    animation: slideInRight 300ms ease-out forwards;
    will-change: transform, opacity;
  }

  .exit-animation {
    animation: fadeOutDown 200ms ease-in forwards;
    will-change: transform, opacity;
  }

  .exit-animation-slide {
    animation: slideOutRight 200ms ease-in forwards;
  }

  /* Component-specific enter/exit classes */
  .details-enter {
    animation: fadeInUp 400ms ease-out forwards;
    animation-delay: 50ms;
    opacity: 0;
  }

  .toast-enter {
    animation: slideInRight 300ms cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
    opacity: 0;
  }

  .toast-exit {
    animation: slideOutRight 200ms ease-in forwards;
  }

  .content-enter {
    animation: fadeInScale 350ms ease-out forwards;
    animation-delay: 100ms;
    opacity: 0;
  }

  /* Loading State Animations - Phase 6C */

  /* Skeleton Component Classes */
  .skeleton-base {
    background: linear-gradient(90deg, rgb(var(--color-gray-200)) 25%, rgb(var(--color-gray-100)) 50%, rgb(var(--color-gray-200)) 75%);
    background-size: 200px 100%;
    animation: shimmer 1.5s infinite linear;
    @apply rounded;
  }

  .skeleton-base-dark {
    background: linear-gradient(90deg, rgb(var(--color-gray-700)) 25%, rgb(var(--color-gray-600)) 50%, rgb(var(--color-gray-700)) 75%);
    background-size: 200px 100%;
    animation: shimmer 1.5s infinite linear;
    @apply rounded;
  }

  .skeleton-item {
    @apply h-16 mb-1 rounded-lg;
    animation: skeleton-pulse 2s ease-in-out infinite;
    will-change: opacity;
  }

  .skeleton-badge {
    @apply w-6 h-6 rounded;
    animation: skeleton-pulse 1.8s ease-in-out infinite;
    will-change: opacity;
  }

  .skeleton-text {
    @apply h-4 rounded;
    animation: skeleton-pulse 2.2s ease-in-out infinite;
    will-change: opacity;
  }

  .skeleton-text-sm {
    @apply h-3 rounded;
    animation: skeleton-pulse 2.4s ease-in-out infinite;
    will-change: opacity;
  }

  .skeleton-json {
    @apply h-32 rounded;
    animation: skeleton-pulse 2s ease-in-out infinite;
    will-change: opacity;
  }

  /* Loading Sequence Classes */
  .loading-sequence {
    animation: progressive-reveal 800ms ease-out forwards;
    will-change: width, opacity;
  }

  .loading-dots::after {
    content: "";
    display: inline-block;
    width: 4px;
    height: 4px;
    border-radius: 50%;
    background-color: currentColor;
    animation: loading-dots 1.4s infinite ease-in-out;
    margin-left: 4px;
  }

  .loading-dots::before {
    content: "";
    display: inline-block;
    width: 4px;
    height: 4px;
    border-radius: 50%;
    background-color: currentColor;
    animation: loading-dots 1.4s infinite ease-in-out;
    animation-delay: -0.32s;
    margin-right: 4px;
  }

  /* Multi-stage Loading States */
  .loading-initial {
    animation: fadeInScale 400ms ease-out forwards;
    will-change: transform, opacity;
  }

  .loading-refresh {
    animation: pulse-blue 1s ease-in-out 2;
    will-change: background-color;
  }

  .loading-background {
    opacity: 0.7;
    animation: skeleton-pulse 3s ease-in-out infinite;
    will-change: opacity;
  }

  /* Skeleton to Content Transition */
  .skeleton-to-content {
    animation: fadeInUp 300ms ease-out forwards;
    animation-delay: 100ms;
    opacity: 0;
    will-change: transform, opacity;
  }

  /* Keyframe Definitions */
  @keyframes list-item-enter {
    0% {
      opacity: 0;
      transform: translateY(12px) scale(0.95);
    }
    100% {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  @keyframes fadeInUp {
    0% {
      opacity: 0;
      transform: translateY(16px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes fadeInScale {
    0% {
      opacity: 0;
      transform: scale(0.95);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes slideInRight {
    0% {
      opacity: 0;
      transform: translateX(20px);
    }
    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes fadeOutDown {
    0% {
      opacity: 1;
      transform: translateY(0);
    }
    100% {
      opacity: 0;
      transform: translateY(-8px);
    }
  }

  @keyframes slideOutRight {
    0% {
      opacity: 1;
      transform: translateX(0);
    }
    100% {
      opacity: 0;
      transform: translateX(20px);
    }
  }

  @keyframes selection-pulse {
    0%,
    100% {
      box-shadow: 0 0 0 0 rgb(var(--color-blue-500) / 0.4);
    }
    50% {
      box-shadow: 0 0 0 8px rgb(var(--color-blue-500) / 0);
    }
  }

  @keyframes pulse-blue {
    0%,
    100% {
      background-color: rgb(var(--color-blue-100));
      color: rgb(var(--color-blue-800));
    }
    50% {
      background-color: rgb(var(--color-blue-200));
      color: rgb(var(--color-blue-900));
    }
  }

  @keyframes bounce-error {
    0%,
    20%,
    50%,
    80%,
    100% {
      transform: translateY(0);
    }
    40% {
      transform: translateY(-4px);
    }
    60% {
      transform: translateY(-2px);
    }
  }

  /* Loading State Keyframes - Phase 6C */
  @keyframes shimmer {
    0% {
      background-position: -200px 0;
    }
    100% {
      background-position: calc(200px + 100%) 0;
    }
  }

  @keyframes skeleton-pulse {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.4;
    }
  }

  @keyframes loading-dots {
    0%,
    80%,
    100% {
      transform: scale(0);
      opacity: 0.5;
    }
    40% {
      transform: scale(1);
      opacity: 1;
    }
  }

  @keyframes progressive-reveal {
    0% {
      width: 0%;
      opacity: 0;
    }
    50% {
      width: 100%;
      opacity: 0.3;
    }
    100% {
      width: 100%;
      opacity: 1;
    }
  }

  /* State Change Animations - Phase 6D */

  /* Base transition class for all status changes */
  .status-transition {
    transition: all 400ms cubic-bezier(0.4, 0, 0.2, 1);
    will-change: background-color, color, transform, box-shadow;
  }

  /* State-specific transition animations */
  .status-to-fetching {
    animation: statusToFetching 500ms ease-out forwards;
  }

  .status-to-success {
    animation: statusToSuccess 600ms ease-out forwards;
  }

  .status-to-stale {
    animation: statusToStale 400ms ease-out forwards;
  }

  .status-to-error {
    animation: statusToError 500ms ease-out forwards;
  }

  .status-to-pending {
    animation: statusToPending 400ms ease-out forwards;
  }

  .status-attention {
    animation: statusAttention 600ms ease-out forwards;
  }

  .status-fade-gentle {
    animation: statusFadeGentle 1200ms ease-in-out forwards;
  }

  /* Container animations for state changes */
  .query-item-status-change {
    animation: queryItemStatusChange 300ms ease-out forwards;
  }

  /* State Transition Keyframes - Phase 6D */
  @keyframes statusToFetching {
    0%,
    100% {
      transform: scale(1);
      opacity: 1;
    }
    50% {
      transform: scale(1.05);
      opacity: 0.8;
    }
  }

  @keyframes statusToSuccess {
    0% {
      transform: scale(1);
      box-shadow: 0 0 0 0 rgb(var(--color-green-500) / 0.3);
    }
    50% {
      transform: scale(1.05);
      box-shadow: 0 0 0 4px rgb(var(--color-green-500) / 0.1);
    }
    100% {
      transform: scale(1);
      box-shadow: 0 0 0 0 rgb(var(--color-green-500) / 0);
    }
  }

  @keyframes statusToStale {
    0% {
      opacity: 1;
      transform: scale(1);
    }
    50% {
      opacity: 0.6;
      transform: scale(0.98);
    }
    100% {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes statusToError {
    0%,
    100% {
      transform: translateX(0) scale(1);
    }
    10%,
    30%,
    50%,
    70%,
    90% {
      transform: translateX(-2px) scale(1.05);
    }
    20%,
    40%,
    60%,
    80% {
      transform: translateX(2px) scale(1.05);
    }
  }

  @keyframes statusToPending {
    0%,
    100% {
      opacity: 1;
      transform: scale(1);
    }
    50% {
      opacity: 0.7;
      transform: scale(1.1);
    }
  }

  @keyframes statusAttention {
    0% {
      transform: scale(1);
      box-shadow: 0 0 0 0 rgb(var(--color-red-500) / 0.4);
    }
    50% {
      transform: scale(1.15);
      box-shadow: 0 0 0 6px rgb(var(--color-red-500) / 0.2);
    }
    100% {
      transform: scale(1);
      box-shadow: 0 0 0 0 rgb(var(--color-red-500) / 0);
    }
  }

  @keyframes statusFadeGentle {
    0% {
      filter: brightness(1);
    }
    25% {
      filter: brightness(0.8);
    }
    75% {
      filter: brightness(0.9);
    }
    100% {
      filter: brightness(1);
    }
  }

  @keyframes queryItemStatusChange {
    0% {
      background-color: transparent;
    }
    50% {
      background-color: rgb(var(--color-blue-50) / 0.3);
    }
    100% {
      background-color: transparent;
    }
  }

  /* Accessibility: Respect reduced motion preference */
  @media (prefers-reduced-motion: reduce) {
    .card-interactive-enhanced,
    .card-selection-animated,
    .card-list-item-animated,
    .btn-animated,
    .status-badge-animated,
    .list-item-stagger,
    .enter-animation,
    .enter-animation-scale,
    .enter-animation-slide,
    .exit-animation,
    .exit-animation-slide,
    .details-enter,
    .toast-enter,
    .toast-exit,
    .content-enter,
    .skeleton-base,
    .skeleton-base-dark,
    .skeleton-item,
    .skeleton-badge,
    .skeleton-text,
    .skeleton-text-sm,
    .skeleton-json,
    .loading-sequence,
    .loading-initial,
    .loading-refresh,
    .loading-background,
    .skeleton-to-content,
    .status-transition,
    .status-to-fetching,
    .status-to-success,
    .status-to-stale,
    .status-to-error,
    .status-to-pending,
    .status-attention,
    .status-fade-gentle,
    .query-item-status-change {
      animation: none !important;
      transition: none !important;
    }

    .list-item-stagger,
    .details-enter,
    .toast-enter,
    .content-enter,
    .skeleton-to-content {
      opacity: 1 !important; /* Show items immediately when motion is reduced */
    }

    .card-interactive-enhanced:hover,
    .card-list-item-animated:hover,
    .btn-animated:hover:not(:disabled) {
      transform: none !important;
    }
  }
}
